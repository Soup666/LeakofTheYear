<?php

namespace ContainerTfmgx4s;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getStofDoctrineExtensions_Listener_UploadableService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'stof_doctrine_extensions.listener.uploadable' shared service.
     *
     * @return \Gedmo\Uploadable\UploadableListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/event-manager/src/EventSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/src/Mapping/MappedEventSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/src/Uploadable/UploadableListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/gedmo/doctrine-extensions/src/Uploadable/MimeType/MimeTypeGuesserInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/stof/doctrine-extensions-bundle/src/Uploadable/MimeTypeGuesserAdapter.php';
        include_once \dirname(__DIR__, 4).'/vendor/stof/doctrine-extensions-bundle/src/Uploadable/ValidatorConfigurator.php';

        $container->privates['stof_doctrine_extensions.listener.uploadable'] = $instance = new \Gedmo\Uploadable\UploadableListener(new \Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter());

        $instance->setAnnotationReader(($container->privates['annotations.cached_reader'] ?? $container->getAnnotations_CachedReaderService()));
        $instance->setDefaultFileInfoClass('Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');
        $instance->setDefaultPath((\dirname(__DIR__, 4).'/public/uploads'));
        (new \Stof\DoctrineExtensionsBundle\Uploadable\ValidatorConfigurator(true))->configure($instance);

        return $instance;
    }
}
